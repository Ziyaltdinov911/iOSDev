//
//  main.swift
//  Project-HW
//
//  Created by Камиль Байдиев on 10.12.2023.
//

import Foundation

//1. Задание: Проверка булевых условий
// Описание: Разработайте систему, которая проверяет и выводит результаты на основе двух булевых значений.
// Требования:
// Проверка обоих условий:
// Имея два булевых значения, программа должна выводить "Оба условия выполняются", если оба условия истинны.
// В противном случае, программа должна выводить "Не все условия выполняются".
// Проверка хотя бы одного условия:
// Имея два булевых значения, программа должна выводить "Хотя бы одно из условий выполняется", если хотя бы одно из них истинно.
// В противном случае, программа должна выводить "Оба условия ложны".
// Ожидаемый результат: При запуске программы выводятся результаты на основе предоставленных булевых значений.

let firstCondition = false
let secondCondition = true

if firstCondition && secondCondition {
    print("Оба условия выполняются")
} else {
    print("Не все условия выполняются")
}

if firstCondition || secondCondition {
    print("Хотя бы одно из условий выполняется")
} else {
    print("Оба условия ложны")
}

// 2. Задание: Проверка четности числа
// Описание: Разработайте систему, которая определяет, является ли число четным или нечетным.
// Требования:
// Проверка на четность:
// Имея число, программа должна проверять его на четность.
// Если число четное, выводится "Число четное", в противном случае "Число нечетное".
// Ожидаемый результат: При запуске программы выводится результат на основе четности предоставленного числа.

let number = 666

if number % 2 == 0 {
    print("Число четное")
} else {
    print("Число нечетное")
}

// 3. Задание: Доступ на мероприятие
// Описание: Создайте систему, которая определяет, может ли человек пройти на важное мероприятие на основе его возраста и наличия билета.
// Требования:
// Проверка возраста и билета:
// Используя булевые значения для возраста (совершеннолетний ли человек) и наличия билета, программа определяет, может ли человек пройти на мероприятие.
// Если условия выполняются, программа выводит "Добро пожаловать!", в противном случае "Доступ запрещен".
// Ожидаемый результат: При запуске программы выводится решение о допуске человека на мероприятие на основе предоставленных условий.

let age = 16
let haveTicket = true

if age >= 16 && haveTicket {
    print("Добро пожаловать!")
} else {
    print("Доступ запрещен")
}

// 4. Задание: Работа со строками
// Описание: Разработайте программу, которая объединяет и выводит строки.
// Требования:
// Объединение строк:
// Имея три строки (имя, фамилия, отчество), программа объединяет их, используя пробелы между ними, и выводит результат.
// Ожидаемый результат: При запуске программы выводится полное имя.

let surname = "Ziyaltdinov "
let name = "Kamil "
let middleName = "Radikovich"
let fullName = surname + name + middleName

print(fullName)

// 5. Задание: Операции с числами
// Описание: Разработайте программу, которая проводит базовые арифметические операции с числами.
// Требования:
// Арифметические операции:
// Имея два числа, программа вычисляет их сумму, разность, произведение и частное, затем выводит результат каждой операции.
// Ожидаемый результат: При запуске программы выводятся результаты арифметических операций.

let firstNum: Double = 421
let secondNum: Double = 32

let difference = firstNum - secondNum
let sum = firstNum + secondNum
let multiplicat = firstNum * secondNum
let division = firstNum / secondNum

print(String(format: "Результат вычитания: %.2f - %.2f = %.2f", firstNum, secondNum, difference))
print(String(format: "Результат сложения: %.2f + %.2f = %.2f", firstNum, secondNum, sum))
print(String(format: "Результат умножения: %.2f * %.2f = %.2f", firstNum, secondNum, multiplicat))
print(String(format: "Результат деления: %.2f / %.2f = %.2f", firstNum, secondNum, division))

// 6. Задание: Точность чисел с плавающей запятой
//
// Описание: Разработайте систему, которая демонстрирует разницу в точности между типами данных Double и Float.
// Требования:
// Задайте две переменные: одну типа Double и одну типа Float.
// Выведите их значения на экран с максимальной точностью.
// Демонстрация разницы в точности:
// Продемонстрируйте разницу в точности этих двух типов, добавив или вычитая из них очень маленькое значение. Затем выводите результат на экран.
// Ожидаемый результат: При запуске программы пользователь увидит разницу в точности между Double и Float.

let doubleNum = 3.141592653589793
let floatNum: Float = 3.141592653589793

print("Артем думает что число Pi равен: \(doubleNum)\nЖеня думает что число Pi равен: \(floatNum)\nУ кого число получилось точнее?")

// 7. Задание: Условные операторы и возраст
// Описание: Создайте систему, которая определяет совершеннолетие человека на основе его возраста.
// Требования:
// Проверка возраста:
// Задайте переменную с возрастом.
// Напишите условие, которое проверяет, является ли человек совершеннолетним, и выводит соответствующее сообщение.
// Ожидаемый результат: При запуске программы на экран выводится информация о совершеннолетии на основе заданного возраста.
let childAge = 19

if childAge >= 18 {
    print("Можно пить пиво!")
} else {
    print("Тебе еще рано, приходи через \(18 - childAge) лет.")
}

// 8. Задание: Работа с циклами
// Описание: Создайте программу, которая использует циклы для вывода чисел.
// Требования:
// Вывод чисел:
// Напишите цикл, который выводит первые 10 натуральных чисел.
// Вывод квадратов чисел:
// Реализуйте другой цикл, который выводит квадрат каждого из первых 10 натуральных чисел.
// Ожидаемый результат: При запуске программы на экран выводятся числа и их квадраты.
//
for num in 1...10 {
    print("Вывод натуральных чисел: \(num)")
}
print()
for num in 1...10 {
    print("Вывод квадратов чисел: \(num * num)")
}

// 8.1. Задание: Логическое "И" (&&)
// Описание: Разработайте программу, которая анализирует два булевых значения (true или false) и решает, соответствуют ли оба условия истине.
// Требования:
// Проверка условий:
// Проанализируйте два предоставленных булевых значения.
// Если оба значения истинны (true), выведите сообщение "Оба условия выполняются".
// В противном случае, выведите "Не все условия выполняются".
// Ожидаемый результат: При анализе булевых значений программа корректно определяет, соответствуют ли оба условия истине или нет.
let oldMan = true
let oldAthleteMan = true

if oldMan && oldAthleteMan {
    print("Оба условия выполняются")
} else {
    print("Не все условия выполняются")
}

// 9. Задание: Логическое "ИЛИ" (||)
// Описание: Создайте программу, которая определяет, является ли хотя бы одно из двух булевых условий истинным.
// Требования:
// Проверка условий:
// Проанализируйте два предоставленных булевых значения.
// Если хотя бы одно из условий истинно (true), выведите "Хотя бы одно из условий выполняется".
// В противном случае, выведите "Оба условия ложны".
// Ожидаемый результат: Программа корректно определяет, является ли хотя бы одно из булевых условий истинным или нет.
let youngMan = true
let youngAthleteMan = false

if youngMan || youngAthleteMan {
    print("Хотя бы одно из условий выполняется")
} else {
    print("Оба условия ложны")
}

// 10. Задание: Логическое отрицание (!)
// Описание: Разработайте программу, которая определяет четность введенного числа.
// Требования:
// Анализ четности:
// Определите, является ли предоставленное число четным.
// Если число нечетное, используйте оператор ! для инвертирования результата и выводите "Число четное".
// Если число четное, выведите "Число нечетное".
// Ожидаемый результат: Программа корректно определяет четность числа и выводит соответствующий результат.
let dayCount = 31

dayCount % 2 != 0 ? print("Число четное") : print("Число нечетное")

// 11. Задание: Комбинация операторов
// Описание: Создайте систему, которая определяет, может ли пользователь участвовать в важном мероприятии на основе двух булевых условий.
// Требования:
// Проверка условий участия:
// Определите, соответствуют ли два предоставленных условия: возраст пользователя старше 18 лет (isAdult) и наличие билета (hasTicket).
// Используйте операторы && и || для определения возможности участия в мероприятии.
// Если пользователь может участвовать, выведите "Добро пожаловать!".
// В противном случае, выведите "Доступ запрещен".
// Ожидаемый результат: Программа корректно определяет возможность участия пользователя в мероприятии на основе предоставленных условий.
//

let isAdult = true
let hasTicket = true

if (isAdult && hasTicket) || (!isAdult && hasTicket) {
    print("Добро пожаловать!")
} else {
    print("Доступ запрещен")
}

