//
//  main.swift
//  Project-HW
//
//  Created by Камиль Байдиев on 10.12.2023.
//

import Foundation

// MARK: - Task 1. Четность числа
//1. Задание: Четность числа
//   - *Описание:* Разработайте функцию, которая определяет, является ли предоставленное число четным.
//   - *Требования:*
//     - Функция определения: Создайте функцию, которая принимает число в качестве параметра.
//     - Функция должна возвращать true, если число четное, и false, если нечетное.
//   - *Ожидаемый результат:* При передаче числа в функцию, она вернет результат четности числа.
//
func isEven(number: Int) -> Bool {
    return number % 2 == 0
}

print(isEven(number: 24))
 
// MARK: - Task 2. Делимость на 3
//2. Задание: Делимость на 3
//   - *Описание:* Разработайте функцию, которая проверяет, делится ли предоставленное число на 3 без остатка.
//   - *Требования:*
//     - Функция проверки: Создайте функцию, принимающую число в качестве параметра.
//     - Функция должна возвращать true, если число делится на 3 без остатка, и false в противном случае.
//   - *Ожидаемый результат:* При передаче числа в функцию, она вернет результат деления числа на 3 без остатка.
//
func isDivisibleBy3(number: Int) -> Bool {
    return number % 3 == 0
}
print(isDivisibleBy3(number: 234))

//MARK: - Task 3. Массив из 100 чисел
//3. Задание: Массив из 100 чисел
//   - *Описание:* Создайте возрастающий массив, содержащий 100 чисел.
//   - *Требования:*
//     - Создание массива: Массив должен начинаться с 1 и заканчиваться 100.
//     - Удалите из массива все четные числа и числа, которые не делятся на 3.
//   - *Ожидаемый результат:* В результате вы получите массив, в котором нет четных чисел и чисел, не делящихся на 3.
//
var numberArray = Array(1...100).filter { $0 % 2 != 0 && $0 % 3 == 0 }
print(numberArray)

//MARK: - Task 4. Числа Фибоначчи.
//4. Задание: Числа Фибоначчи
//   - *Описание:* Разработайте функцию, которая добавляет в массив новое число Фибоначчи.
//   - *Требования:*
//     - Функция Фибоначчи: Создайте функцию, которая добавляет в массив 50 чисел Фибоначчи. Числа Фибоначчи определяются соотношениями Fn=Fn-1 + Fn-2.
//   - *Ожидаемый результат:* Массив, содержащий 50 чисел Фибоначчи.
//
func fibonacciArray() -> [Int] {
    var fibArray = [0, 1]
    while fibArray.count < 50 {
        fibArray.append(fibArray[fibArray.count - 1] + fibArray[fibArray.count - 2])
    }
    return fibArray
}

//MARK: - Task 5. Факториал числа
//5. Задание: Факториал числа
//   - *Описание:* Напишите функцию, которая рассчитывает факториал заданного числа N.
//   - *Требования:*
//     - Функция факториала: Функция принимает число N в качестве параметра.
//     - Функция должна возвращать значение факториала для N.
//   - *Ожидаемый результат:* При передаче числа в функцию, она вернет факториал этого числа.
//
//func factorial(of number: Int) -> Int {
//    if number == 0 {
//        return 1
//    } else {
//        var result = 1
//        for i in 1...number {
//            result *= i
//        }
//        return result
//    }
//}
//
//print(factorial(of: 44))

//MARK: - Task 6. Простой калькулятор
//6. Задание: Простой калькулятор
//   - *Описание:* Разработайте программу, которая выполняет арифметические операции между двумя числами.
//   - *Требования:*
//     - Функция калькулятора: Функция принимает два числа и операцию (сложение, вычитание, умножение, деление) в качестве параметров.
//     - Функция должна возвращать результат выбранной операции.
//   - *Ожидаемый результат:* При передаче двух чисел и операции в функцию, она вернет результат этой операции.
//
func calculator(num1: Double, num2: Double, operation: String) -> Double {
    switch operation {
    case "+":
        return num1 + num2
    case "-":
        return num1 - num2
    case "*":
        return num1 * num2
    case "/":
        return num1 / num2
    default:
        fatalError("Ошибка")
    }
}

print(calculator(num1: 32, num2: 2, operation: "+"))

//MARK: - Task 7. Длина строки
//7. Задание: Длина строки
//   - *Описание:* Разработайте функцию, которая определяет длину заданной строки.
//   - *Требования:*
//     - Функция определения длины: Функция принимает строку в качестве параметра.
//     - Функция возвращает длину этой строки.
//   - *Ожидаемый результат:* При передаче строки в функцию, она вернет длину этой строки.
//
func stringLength(_ inputString: String) -> Int {
    return inputString.count
}

print(stringLength("property"))

//MARK: - Task 8. Максимум из трех чисел
//8. Задание: Максимум из трех чисел
//   - *Описание:* Создайте функцию, которая определяет максимальное из трех предоставленных чисел.
//   - *Требования:*
//     - Функция нахождения максимума: Функция принимает три числа в качестве параметров.
//     - Функция возвращает наибольшее из трех чисел.
//   - *Ожидаемый результат:* При передаче трех чисел в функцию, она вернет наибольшее из них.
//
func maxOfThree(_ num1: Int, _ num2: Int, _ num3: Int) -> Int {
    return max(num1, max(num2, num3))
}

print(maxOfThree(23, 3, 5))

//MARK: - Task 9. Реверс строки
//9. Задание: Реверс строки
//   - *Описание:* Напишите функцию, которая переворачивает введенную пользователем строку.
//   - *Требования:*
//     - Функция реверса: Функция принимает строку в качестве параметра.
//     - Функция возвращает эту строку в обратном порядке.
//   - *Ожидаемый результат:* При передаче строки в функцию, она вернет эту строку в обратном порядке.
func reverseString(_ inputString: String) -> String {
    return String(inputString.reversed())
}

print(reverseString("desrever"))
